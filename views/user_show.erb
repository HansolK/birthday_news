
<% if logged_in? %>

  <div class="combine_divs">

  <div class="user_icon">

    <i style="color: <%= current_user.color %>;" id="icon" class="user fas fa-user-circle fa-5x"></i>
    
    <div class="wrapper">
        <ul class="color-list hidden">
          <% ["orange", "green", "white", "pink", "grey", "blue"].each do |color| %>
            <li class="color"><%= color %></li>
          <% end %>
        </ul>
    </div>
  </div>
  
  
  <div class="userDetailform">
    <div class="userDetail">
      <p class="firstName"></p>
      <p class="lastName"></p>
      <p class="birthDate"></p>
    </div>

    <h3>Frequent Categories</h3>

    <ul class="categories">
    </ul>

    <h3><a href="/articles/bookmarks"> Bookmarked Articles</h3>
  </div>
<% end %>

<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script>

 var appendCategory = (name, count) => {

    var newUnorderedList = document.querySelector('.categories');
    var newLi = document.createElement('li')
    newLi.textContent = `${name} (${count})`;
    newUnorderedList.appendChild(newLi)
  }

  var sortedSectionName = [];
  var searchResult = {};
  
    var sections = {
      url: `https://api.nytimes.com/svc/search/v2/articlesearch.json?fq=pub_date:(<%=@pub_date%>)&api-key=xowFFypBoDXFSCp6TjUuwy5mPmY1H6Ra`
    }

    $.ajax(sections).done( res => {
      res.response.docs.forEach(doc => {
        if (searchResult[doc.section_name]) {
          searchResult[doc.section_name].push(doc);
        } else {
          searchResult[doc.section_name] = [doc];
        }
        
        var firstNamePtag = document.querySelector('.firstName')
        var lastNamePtag = document.querySelector('.lastName')
        var birthDatePtag = document.querySelector('.birthDate')

        firstNamePtag.textContent = `First Name: <%= current_user.firstname %> `
        lastNamePtag.textContent = `Last Name: <%= current_user.lastname %>`
        birthDatePtag.textContent = `Birth Date: <%= @pub_date %>`

      })
      
    var topFiveCats = Object.keys(searchResult).map( k => {
      return {count: searchResult[k].length, name: k };
    }).sort((a, b) => b.count - a.count).slice(0,5);
    topFiveCats.forEach( hash => {
      appendCategory(hash.name, hash.count);      
    });

    });

</script>

